<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
  <meta charset="utf-8">
  <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport'/>
  <meta name="viewport" content="width=device-width"/>

  <title>Reset Password</title>
  <style>
    body {
      background: #2A2B31;
      font: 16px 'Helvetica Neue', Helvetica, sans-serif;
      -webkit-font-smoothing: antialiased;
    }

    /*--- PANEL ---*/
    .panel {
      background: #35363C;
      margin: 40px auto;
      width: 300px;
      border: 1px solid #46464C;
      border-radius: 3px;
      padding: 40px;
      box-shadow: 1px 3px #26272C;
    }

    .panel__title {
      color: beige;
      text-align: center;
      width: 100%;
      margin-bottom: 50px;
    }

    .panel__avatar {
      background: #fff;
      border: 8px solid #46393D;
      width: 100px;
      height: 100px;
      border-radius: 50%;
      margin: 0 auto 40px;
      display: block;
    }

    /*--- INPUTS ---*/

    .inputs__item {
      padding-bottom: 40px;
    }

    .inputs__label {
      color: #A64C41;
      display: block;
    }

    .inputs__input {
      border: none;
      border-bottom: 1px solid #6B6C70;
      background: #35363C;
      display: block;
      width: 100%;
      padding: 10px 0;
      font: 16px 'Helvetica Neue', Helvetica, sans-serif;
      color: #A64C41;
    }
    .inputs__input:focus {
      outline: none;
    }

    .inputs__item--new.inputs__label,
    .inputs__item--new.inputs__input {
      color: #6498BB;
    }

    .inputs__item--cta {
      text-align: center;
      padding-bottom: 0;
      padding-top: 20px;
    }

    /*--- Button ---*/
    .btn {
      border: none;
      background: #A64C41;
      color: #C8BDA0;
      font-size: 20px;
      border-radius: 3px;
      padding: 12px 50px;
      cursor: pointer;
    }
  </style>
</head>
<body>
<div>
  <div class="panel">
    <div class="panel__title">Reset Password</div>
    <form action="" method="post" class="inputs">
      <div class="inputs__item">
        <label for="previous-password" class="inputs__label">e-mail</label>
        <input type="text" class="inputs__input" id="email" name="email" placeholder="e-mail" />
      </div>
      <div class="inputs__item">
        <label for="new-password" class="inputs__label">New password</label>
        <input type="password" class="inputs__input" id="password" name="password" placeholder="New password" />
      </div>
      <div class="inputs__item inputs__item--new">
        <label for="new-password-again" class="inputs__label">Check your new password</label>
        <input type="password" class="inputs__input" id="passwordVerification" placeholder="Check password"/>
      </div>
      <div class="inputs__item inputs__item--cta">
        <input type="submit" class="btn" id="submit" value="RESET"/>
      </div>
    </form>
  </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jsSHA/2.0.2/sha.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function (){
    window.axios = axios;
    window.axios.defaults.headers.common = {
      'X-Requested-With': 'XMLHttpRequest',
    };

    document.querySelector('#submit').addEventListener('click', function(e) {
      e.preventDefault();
      const params = {
        email: document.querySelector('#email').value,
        password: document.querySelector('#password').value,
        passwordVerification: document.querySelector('#passwordVerification').value,
      }
      if (isValidated(params)) {
        resetPassword(params);
      }
      clearField(params);
    })
  });

  const isValidated = (params) => {
    const isEmailValidated = RegExp(<%= email_regex %>).test(params.email);
    const isPasswordValidated = RegExp(<%= password_regex %>).test(params.password);
    const isPasswordCheckPassed = params.passwordVerification === params.password;

    if (!isEmailValidated) alert('<%= email_alert %>');
    if (!isPasswordValidated) alert('<%= password_alert %>');
    if (!isPasswordCheckPassed) alert('<%= password_does_not_match_alert %>');
    return isPasswordValidated && isPasswordValidated && isPasswordCheckPassed;
  }

  const resetPassword = (params) => {
    const sendData = {
      email: params.email,
      password: params.email,
    };
    axios.post('/auth/reset/password', sendData)
      .then(response => {
        console.log('success:');
        console.log(response.data);
        if (!!response.data.error) {
          alert('Password reset failed');
          return false;
        }
        alert('Password reset successfully');
        return response;
      })
      .catch(err => {
        console.log(err);
      });
  }

  const passwordHashing = password => {
    const objHash = new jsSHA("SHA-512", "TEXT", {numRounds: 1});
    objHash.update(password);

    return objHash.getHash("HEX");
  }

  const clearField = (params) => {
    document.querySelector('#password').value = '';
    document.querySelector('#passwordVerification').value = '';
  }
</script>
</body>
</html>
